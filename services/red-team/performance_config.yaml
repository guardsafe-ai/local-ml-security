# Performance Test Configuration
# Comprehensive configuration for performance benchmarking and testing

# General settings
general:
  output_dir: "./performance_results"
  log_level: "INFO"
  max_workers: 4
  timeout_seconds: 300

# Benchmark settings
benchmarks:
  # Latency benchmarks
  latency:
    iterations: 100
    warmup_iterations: 10
    timeout_seconds: 30
    
  # Throughput benchmarks
  throughput:
    duration_seconds: 60
    max_concurrent: 10
    timeout_seconds: 120
    
  # Memory benchmarks
  memory:
    iterations: 50
    gc_before_each: true
    timeout_seconds: 60
    
  # Attack success rate benchmarks
  attack_success:
    iterations: 10
    test_cases_per_iteration: 5
    timeout_seconds: 180

# Attack-specific configurations
attacks:
  # Gradient-based attacks
  gradient_attacks:
    fgsm:
      iterations: 50
      epsilon: 0.1
      max_iterations: 10
    pgd:
      iterations: 30
      epsilon: 0.1
      max_iterations: 20
    autoattack:
      iterations: 20
      max_iterations: 100
    deepfool:
      iterations: 20
      max_iterations: 50
    mi_fgsm:
      iterations: 30
      epsilon: 0.1
      max_iterations: 10
    di_fgsm:
      iterations: 30
      epsilon: 0.1
      max_iterations: 10
  
  # Text-level attacks
  text_attacks:
    textfooler:
      iterations: 30
      max_candidates: 50
    bert_attack:
      iterations: 30
      max_candidates: 50
    hotflip:
      iterations: 30
      max_candidates: 50
    bae:
      iterations: 20
      max_candidates: 50
    clare:
      iterations: 20
      max_candidates: 50
    textbugger:
      iterations: 20
      max_candidates: 50
    deepwordbug:
      iterations: 20
      max_candidates: 50
  
  # Universal triggers
  universal_triggers:
    iterations: 20
    max_candidates: 100
    trigger_length: 10
  
  # Embedding perturbation
  embedding_perturbation:
    iterations: 30
    perturbation_strength: 0.1
    max_iterations: 20
  
  # Multi-turn attacks
  multi_turn_attacks:
    tap:
      iterations: 20
      max_turns: 5
    pair:
      iterations: 20
      max_turns: 5
    crescendo:
      iterations: 20
      max_turns: 5
  
  # Agent attacks
  agent_attacks:
    tool_injection:
      iterations: 30
      max_tools: 5
    prompt_leaking:
      iterations: 30
      max_attempts: 10
    recursive_attacks:
      iterations: 20
      max_depth: 3
    chain_of_thought:
      iterations: 20
      max_steps: 5
  
  # Traditional ML attacks
  traditional_ml_attacks:
    evasion:
      iterations: 30
      max_iterations: 20
    poisoning:
      iterations: 20
      poison_ratio: 0.1
    model_extraction:
      iterations: 10
      max_queries: 100
    membership_inference:
      iterations: 30
      max_queries: 50

# Compliance benchmarks
compliance:
  nist_ai_rmf:
    risk_categorization:
      iterations: 50
      system_profiles: 10
    trustworthiness_assessment:
      iterations: 30
      system_profiles: 10
    governance_controls:
      iterations: 20
      risk_levels: ["low", "medium", "high"]
    risk_mitigation:
      iterations: 20
      risk_types: ["bias", "privacy", "robustness"]
  
  eu_ai_act:
    risk_classification:
      iterations: 50
      system_profiles: 10
    conformity_assessment:
      iterations: 30
      system_profiles: 10
    high_risk_requirements:
      iterations: 20
    limited_risk_requirements:
      iterations: 20
    prohibited_ai_systems:
      iterations: 20
    risk_mitigation_requirements:
      iterations: 20

# Behavior analysis benchmarks
behavior_analysis:
  activation_analysis:
    iterations: 30
    max_layers: 10
  attribution_analysis:
    iterations: 30
    methods: ["shap", "lime", "integrated_gradients"]
  causal_analysis:
    iterations: 20
    max_variables: 10
  anomaly_detection:
    iterations: 30
    methods: ["isolation_forest", "one_class_svm", "autoencoder"]

# Certification benchmarks
certification:
  randomized_smoothing:
    iterations: 20
    noise_levels: [0.1, 0.2, 0.3]
  interval_bound_propagation:
    iterations: 20
    max_layers: 5

# Privacy attack benchmarks
privacy_attacks:
  membership_inference:
    iterations: 30
    max_queries: 50
  model_inversion:
    iterations: 20
    max_iterations: 100
  data_extraction:
    iterations: 20
    max_queries: 100

# Distributed testing benchmarks
distributed:
  task_queue:
    max_workers: 10
    task_types: ["attack", "analysis", "reporting"]
  worker_manager:
    scaling_tests: true
    max_workers: 20
  load_balancer:
    load_balancing_algorithms: ["round_robin", "least_connections", "weighted"]
  distributed_coordinator:
    coordination_tests: true
    max_nodes: 10

# Optimization benchmarks
optimization:
  result_cache:
    cache_sizes: [100, 1000, 10000]
    hit_rates: [0.5, 0.8, 0.95]
  batch_optimizer:
    batch_sizes: [1, 5, 10, 20]
  gpu_manager:
    memory_usage_tests: true
    max_gpu_memory: 8192  # MB

# Monitoring benchmarks
monitoring:
  prometheus_metrics:
    metric_collection_rate: 1  # per second
    retention_hours: 24
  websocket_streaming:
    max_connections: 100
    message_rate: 10  # per second
  alert_manager:
    alert_types: ["performance", "security", "system"]
    max_alerts: 1000

# Visualization benchmarks
visualizations:
  attack_trees:
    max_nodes: 100
    max_depth: 10
  embedding_plots:
    max_points: 10000
    dimensions: [2, 3]
  heatmaps:
    max_cells: 10000
    color_schemes: ["viridis", "plasma", "inferno"]
  security_dashboard:
    max_widgets: 50
    refresh_rate: 1  # per second

# Reporting benchmarks
reporting:
  executive_reports:
    max_sections: 20
    max_charts: 50
  technical_reports:
    max_attacks: 100
    max_vulnerabilities: 50
  compliance_reports:
    max_frameworks: 10
    max_controls: 100

# MLflow integration benchmarks
mlflow_integration:
  model_fetcher:
    max_models: 100
    max_versions: 10
  version_manager:
    max_versions: 50
    version_comparison: true

# SIEM integration benchmarks
siem_integration:
  splunk:
    max_events: 10000
    query_timeout: 30
  elastic_security:
    max_events: 10000
    query_timeout: 30
  azure_sentinel:
    max_events: 10000
    query_timeout: 30

# Test data generation
test_data:
  text_samples:
    min_length: 10
    max_length: 1000
    languages: ["en", "es", "fr", "de"]
  conversation_samples:
    min_turns: 2
    max_turns: 10
    max_turn_length: 500
  system_profiles:
    purposes: ["autonomous_vehicle", "recruitment", "credit_scoring", "healthcare"]
    data_types: ["personal", "biometric", "location", "financial"]
    decision_impacts: ["safety_critical", "high_impact", "limited_impact"]

# Performance thresholds
thresholds:
  latency:
    warning: 1.0  # seconds
    critical: 5.0  # seconds
  throughput:
    warning: 0.1  # operations per second
    critical: 0.05  # operations per second
  memory_usage:
    warning: 100  # MB
    critical: 500  # MB
  cpu_usage:
    warning: 80  # percent
    critical: 95  # percent
  error_rate:
    warning: 0.05  # 5%
    critical: 0.1  # 10%
  success_rate:
    warning: 0.95  # 95%
    critical: 0.9  # 90%

# Alerting configuration
alerts:
  enabled: true
  channels:
    - "console"
    - "file"
    - "email"
  email:
    smtp_server: "localhost"
    smtp_port: 587
    username: "alerts@example.com"
    password: "password"
    recipients: ["admin@example.com"]
  file:
    log_file: "./performance_alerts.log"
    max_size: 10485760  # 10MB
    backup_count: 5

# Export configuration
export:
  formats: ["json", "csv", "html"]
  include_metadata: true
  include_charts: true
  chart_formats: ["png", "svg", "pdf"]
